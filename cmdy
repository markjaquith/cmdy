#!/bin/zsh
CMDY_DIR=~/.cmdy
CMDY_COMMANDS_DIR="${CMDY_DIR}/commands"
CHOOSE_PROMPT="→ "

local flag_help flag_verbose

function printUsage() {
	local usage=(
		"Usage:"
		" "
		"cmdy [-h|--help]"
		"cmdy create"
		"cmdy delete"
	)

	local info=(
		" ██████ ███    ███ ██████  ██    ██ "
		"██      ████  ████ ██   ██  ██  ██  "
		"██      ██ ████ ██ ██   ██   ████   "
		"██      ██  ██  ██ ██   ██    ██    "
 		" ██████ ██      ██ ██████     ██    "
		" "
		"Your friendly command line alias manager"
		" "
		"(it’s pronounced “commandy”)"
	)

	gum style \
		--foreground 212 --border-foreground 212 --border rounded \
		--align center --width 50 --margin "1 1 0 1" --padding "1 2" \
		$info

	gum style \
		--foreground 212 --border-foreground 212 --border none \
		--align left --width 50 --margin "0" --padding "1 2"\
		$usage
}

function editInstructions() {
		gum choose --cursor.italic --cursor.faint --cursor="
Press return to edit your script, and ctrl-d to save" ""
}

function createCommand() {
	name=$(gum input --prompt "Command name: " --placeholder="A short description of your command")

	if [[ -z $name ]]; then
		print '{{ Color "#ff0000" "❌ You must provide a name for your command" }}' | gum format -t template
		exit 1
	fi

	command="${CMDY_COMMANDS_DIR}/${name}"

	editInstructions
	body=$(print "#!/bin/zsh\n" | gum write --height=10 --show-line-numbers --cursor-line-number.foreground="212")
	
	if [[ $? -ne 0 ]];then
		print '{{ Color "#ff0000" "❌ Aborted command creation" }}' | gum format -t template
		exit 1
	fi

	body="#!/bin/zsh\n\n${body}"

	print $body > $command
	chmod +x $command

	printf "✅ Created “${name}”\n"
}

function editCommand() {
	name=$(chooseCommand)
	if [[ -z $name ]];then
		print '{{ Color "#ff0000" "❌ No command was chosen" }}' | gum format -t template
		exit 1
	fi
	command="${CMDY_COMMANDS_DIR}/${name}"

	editInstructions
	body=$(cat $command | gum write --height=10 --show-line-numbers --cursor-line-number.foreground="212")

	if [[ $? -ne 0 ]];then
		print '{{ Color "#ff0000" "❌ Aborted command edit" }}' | gum format -t template
		exit 1
	fi

	print $body > $command
	chmod +x $command

	printf "✅ Edited “${name}”\n"
}

function deleteCommand() {
	name=$(chooseCommand)
	if [[ -z $name ]];then
		print '{{ Color "#ff0000" "❌ No command was chosen" }}' | gum format -t template
		exit 1
	fi
	command="${CMDY_COMMANDS_DIR}/${name}"
	gum confirm "Delete command?" && rm "${command}" && printf "\n✅ Deleted “${name}”\n"
}

function chooseCommand() {
	ls $CMDY_COMMANDS_DIR | gum filter --placeholder="Filter commands" --prompt="$CHOOSE_PROMPT"
}

zmodload zsh/zutil
zparseopts -D -F -K -- \
	{h,-help}=flag_help \
	{v,-verbose}=flag_verbose ||
	return 1

# Do setup.
mkdir -p ~/.cmdy/commands

if [[ $1 = 'create' ]];then
	createCommand
elif [[ $1 = 'delete' ]];then
	deleteCommand
elif [[ $1 = 'edit' ]];then
	editCommand
else
	local command=$(chooseCommand)	

	if [[ -n $command ]];then
		"${CMDY_COMMANDS_DIR}/${command}"
	fi
fi
