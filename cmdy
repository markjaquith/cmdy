#!/bin/zsh
CMDY_DIR=~/.cmdy
CMDY_COMMANDS_DIR="${CMDY_DIR}/commands"

local flag_help flag_verbose

function printUsage() {
	local usage=(
		"Usage:"
		" "
		"cmdy [-h|--help]"
		"cmdy create"
		"cmdy delete"
	)

	local info=(
		" ██████ ███    ███ ██████  ██    ██ "
		"██      ████  ████ ██   ██  ██  ██  "
		"██      ██ ████ ██ ██   ██   ████   "
		"██      ██  ██  ██ ██   ██    ██    "
 		" ██████ ██      ██ ██████     ██    "
		" "
		"Your friendly command line alias manager"
		" "
		"(it’s pronounced “commandy”)"
	)

	gum style \
		--foreground 212 --border-foreground 212 --border rounded \
		--align center --width 50 --margin "1 1 0 1" --padding "1 2" \
		$info

	gum style \
		--foreground 212 --border-foreground 212 --border none \
		--align left --width 50 --margin "0" --padding "1 2"\
		$usage
}

function createCommand() {
	name=$(gum input --prompt "Command name: " --placeholder="A short description of your command")

	if [[ -z $name ]]; then
		print '{{ Color "#ff0000" "❌ You must provide a name for your command" }}' | gum format -t template
		return 1
	fi

	command="${CMDY_COMMANDS_DIR}/${name}"

	print "Create your script!"
	print "Psst: press ctrl-d when you’re done.\n"
	body=$(print "#!/bin/zsh\n" | gum write --height=10 --show-line-numbers --cursor-line-number.foreground="212")
	
	body="#!/bin/zsh\n\n${body}"

	print $body > $command
	chmod +x $command

	echo ""
}

function editCommand() {
	print "Which command would you like to edit?\n"
	name=$(chooseCommand)
	command="${CMDY_COMMANDS_DIR}/${name}"

	print "Edit your script!"
	print "Psst: press ctrl-d when you’re done.\n"
	body=$(cat $command | gum write --height=10 --show-line-numbers --cursor-line-number.foreground="212")

	print $body > $command
	chmod +x $command
}

function deleteCommand() {
	print "Which command would you like to delete?\n"
	name=$(chooseCommand)
	command="${CMDY_COMMANDS_DIR}/${name}"

	if [[ -z $name ]]; then
		print '{{ Color "#ff0000" "❌ You did not select a command for deletion" }}' | gum format -t template
		return 1
	fi

	gum confirm && rm "${command}" && print "✅ Deleted “${name}”"
}

function chooseCommand() {
	ls $CMDY_COMMANDS_DIR | gum filter --placeholder="Filter commands" --prompt="→ "
}

zmodload zsh/zutil
zparseopts -D -F -K -- \
	{h,-help}=flag_help \
	{v,-verbose}=flag_verbose \
	{f,-filename}:=arg_filename ||
	return 1

# Do setup.
mkdir -p ~/.cmdy/commands

if [[ $1 = 'create' ]];then
	createCommand
elif [[ $1 = 'delete' ]];then
	deleteCommand
elif [[ $1 = 'edit' ]];then
	editCommand
else
	local command=$(chooseCommand)
	if [[ -n $command ]];then
		"${CMDY_COMMANDS_DIR}/${command}"
	fi
fi
