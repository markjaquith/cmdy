// vim:ft=pkl tabstop=4 shiftwidth=4 expandtab
amends "package://github.com/jdx/hk/releases/download/v1.0.0/hk@1.0.0#/Config.pkl"
import "package://github.com/jdx/hk/releases/download/v1.0.0/hk@1.0.0#/Builtins.pkl"

local linters = new Mapping<String, Step> {
    // uses builtin prettier linter config
    ["prettier"] = Builtins.prettier

    // define a custom linter
    ["pkl"] {
        glob = "*.pkl"
        check = "pkl eval {{files}} >/dev/null"
    }

    ["rs"] {
        glob = "*.rs"
        check = "cargo clippy --all-targets --all-features -- -D warnings"
        fix = "cargo clippy --all-targets --all-features --fix; cargo fmt"
    }
}

hooks {
    ["pre-commit"] {
        fix = true           // automatically modify files with available linter fixes
        stash = "patch-file" // stashes unstaged changes while running fix steps
        steps {
            // "prelint" here is simply a name to define the step
            ["prelint"] {
                // if a step has a "check" script it will execute that
                check = "mise run prelint"
                exclusive = true // ensures that the step runs in isolation
            }
            ...linters // add all linters defined above
            ["postlint"] {
                check = "mise run postlint"
                exclusive = true
            }
        }
    }

    ["commit-msg"] {
        steps {
            ["conventional-commits"] {
                check = "scripts/check-commit-msg {{commit_msg_file}}"
            }
        }
    }
    // instead of pre-commit, you can instead define pre-push hooks
    ["pre-push"] {
        steps = linters
    }
    // "fix" and "check" are special steps for `hk fix` and `hk check` commands
    ["fix"] {
        fix = true
        steps = linters
    }
    ["check"] {
        steps = linters
    }
}
